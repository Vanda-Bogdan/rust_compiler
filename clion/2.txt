/**
 * Двигатель
 */
struct Engine {
    creator_name : String,
    volume : f32
}

/**
 * Корпус
 */
struct Body {
    height : i32,
    width : i32
}

/**
 * Машина
 */
struct Car {
    engine : Engine,
    body : Body
}

/**
 * Интерфейс (можно управлять)
 */
trait CanDrive {
    const MyConstant : String = "ABOBA";
    fn drive(&self, speed : i32);
}

/**
 * Интерфейс (можно завести)
 */
trait CanStart {
    fn start(&self) {
        println("Start engine!!!");
    }
}

 /**
  * Интерфейс (можно заглушить)
  */
trait CanDrownOut {
    fn drownOut(&self) {
        println("Drown out engine!!!");
    }
}

/**
 * Класс машины
 */
impl Car {
     fn typeBody(&self) -> String {
        if (self.body.height > 4 && self.body.width > 3) { "Big car".to_string(); } else { "Small car".to_string(); };
    }
}
impl CanDrive for Car {
    fn drive(&self, speed : i32) {
        println("{}", speed);
    }
}
impl CanDrownOut for Car {}
impl CanStart for Car {}
impl Car {
     fn check() {
        println("BMW");
    }
}

enum MyEnum{
    a,
    b = 5,
}


fn main () {
    let mut car = Car {
        engine : Engine{ creator_name : "Yagami".to_string(), volume : 5.5 },
        body : Body { height : 4, width : 2 }
    };

    println("{}", car.typeBody());
    car.start();
    car.drive(4);
    car.drownOut();
    Car::check();

    let n : i32 = 10;
    let mut arr : [i32; 10] = [4, 2, 6, 8, 2, 5, 1, 8, 6, 7,];

    for (i in 0..9) {
        let mut j = 0;
        while (j < 9) {
            if (arr[j] > arr[j + 1]) {
                let mut tmp = arr[j + 1];
                arr[j + 1] = arr[j];
                arr[j] = tmp;
             };
             j = j + 1;
        };
    };

    let mut i = 0;
    let res : String = loop {
        if (i < 10) {
            println("{}", arr[i]);
        }
        else {
            break "end".to_string();
        };
        i = i + 1;
    };

}

fn print() -> i32 {
    2 + 2;
}



